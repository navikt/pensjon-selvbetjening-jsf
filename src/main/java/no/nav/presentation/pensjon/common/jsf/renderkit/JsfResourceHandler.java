package no.nav.presentation.pensjon.common.jsf.renderkit;

import javax.faces.context.FacesContext;

import org.apache.myfaces.renderkit.html.util.ResourceHandler;

/**
 * Class whose instances represent a resource inside the stelvio-presentation
 * jarfile which a custom component needs to tell a browser to fetch. This
 * implementation is based on the tomahawk MyFacesResourceHandler implementation
 */
@SuppressWarnings("unchecked")
public class JsfResourceHandler implements ResourceHandler {

    private final Class customComponent;
    private final String resource;

    /**
     * Constructor.
     *
     * @param component    is a class that must be in package org.apache.myfaces.custom.
     *                     The resource to be served will be located relative to this
     *                     class in the classpath. Note that code wishing to serve
     *                     resources from other locations in the classpath must write a
     *                     custom ResourceHandler implementation.
     * @param resourceName is the name of a file that can be found in dir
     *                     "resource/{resourceName} relative to the location of the
     *                     specified component class in the classpath.
     */
    public JsfResourceHandler(Class component, String resourceName) {
        validateCustomComponent(component);
        customComponent = component;
        resource = resourceName;
    }

    /**
     * Return a Class object which can decode the url generated by this class in
     * the getResourceUri method and use that info to locate the resource data
     * represented by this object.
     */
    @Override
    public Class getResourceLoaderClass() {
        return JsfResourceLoader.class;
    }

    /**
     * Verify that the base class for the resource lookup is in the
     * no.stelvio.presentation.jsf.taglib package.
     */
    protected void validateCustomComponent(Class stelvioCustomComponent) {
        String packageName = JsfResourceLoader.NO_NAV_PRESENTATION_PENSJON_JSF_TAGLIB;

        if (!stelvioCustomComponent.getName().startsWith(packageName + ".")) {
            throw new IllegalArgumentException("expected a stelvio custom component class in package " + packageName);
        }
    }

    /**
     * Return a URL that the browser can later submit to retrieve the resource
     * handled by this instance.
     * <p>
     * The emitted URL is of form:
     *
     * <pre>
     *    {partial.class.name}/{resourceName}
     * </pre>
     * <p>
     * where partial.class.name is the name of the base class specified in the constructor, and resourceName is the resource specified in the constructor.
     */
    @Override
    public String getResourceUri(FacesContext context) {
        String className = customComponent.getName();
        StringBuffer buffer = new StringBuffer();
        buffer.append(className.substring(JsfResourceLoader.NO_NAV_PRESENTATION_PENSJON_JSF_TAGLIB.length() + 1));
        buffer.append("/");

        if (resource != null) {
            buffer.append(resource);
        }

        return buffer.toString();
    }
}
